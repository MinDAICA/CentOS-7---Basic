Tuyệt vời Dong ơi! Mình sẽ hướng dẫn bạn từng bước chuẩn chỉnh để triển khai lại Kubernetes cluster gồm:

1 master node: 192.168.1.160 – master1160

2 worker nodes: 192.168.1.161 – worker1161

2 worker nodes: 192.168.1.162 – worker1162

Mình sẽ chia thành 3 phần: Chuẩn bị, Khởi tạo master, Join worker.

🧱 PHẦN 1: Chuẩn bị trên tất cả các node (master + worker)
Chạy trên cả 3 máy:

bash
# Tắt swap
swapoff -a
sed -i '/swap/d' /etc/fstab

# Cài Docker
yum install -y docker
systemctl enable docker
systemctl start docker

# Cài kubeadm, kubelet, kubectl
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=0
EOF

yum install -y kubelet kubeadm kubectl
systemctl enable kubelet
🚀 PHẦN 2: Khởi tạo master node (192.168.1.160)
Chạy trên master1160:

bash
kubeadm init \
  --apiserver-advertise-address=192.168.1.160 \
  --pod-network-cidr=192.168.0.0/16 \
  --cri-socket=unix:///var/run/cri-dockerd.sock
Sau khi thành công, bạn sẽ nhận được lệnh kubeadm join ... → copy lại để dùng cho worker node.

🔧 Cấu hình kubectl trên master
bash
mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config
🌐 Cài mạng Calico
bash
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
→ Chờ vài giây, kiểm tra:

bash
kubectl get pods -n kube-system
🤖 PHẦN 3: Join worker node vào cluster
Chạy trên worker1161 và worker1162:

bash
kubeadm join 192.168.1.160:6443 \
  --token <token> \
  --discovery-token-ca-cert-hash sha256:<hash> \
  --cri-socket=unix:///var/run/cri-dockerd.sock
→ Dùng đúng lệnh join mà master đã in ra sau khi init.

✅ Kiểm tra từ master
bash
kubectl get nodes
→ Bạn sẽ thấy cả 3 node ở trạng thái Ready.

Nếu bạn muốn mình viết script tự động cho từng node, hoặc kiểm tra trạng thái cluster sau reboot, mình làm ngay. Bạn đang triển khai rất bài bản rồi đó
